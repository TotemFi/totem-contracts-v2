{
  "address": "0x6FF1BFa14A57594a5874B37ff6AC5efbD9F9599A",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "locker",
          "type": "address"
        }
      ],
      "name": "SetLocker",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADVISORS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AdvisorsAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMMUNITY_DEVELOPMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CommunityDevelopmentAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LAUNCH_POOL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDITY_POOL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LiquidityPoolAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRIVATE_SALE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PUBLIC_SALE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PrivateSaleAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PublicSaleAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SEED_INVESTMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_REWARDS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGIC_ROUND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SeedInvestmentAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StakingRewardsAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StrategicRoundAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEAM_ALLOCATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TeamAllocationAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locker",
      "outputs": [
        {
          "internalType": "contract ILocker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CommunityDevelopmentAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_StakingRewardsAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_LiquidityPoolAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PublicSaleAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_AdvisorsAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_SeedInvestmentAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_PrivateSaleAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TeamAllocationAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_StrategicRoundAddr",
          "type": "address"
        }
      ],
      "name": "setDistributionTeamsAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_locker",
          "type": "address"
        }
      ],
      "name": "setLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setTaxExemptStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTaxRate",
          "type": "uint256"
        }
      ],
      "name": "setTaxRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTaxationWallet",
          "type": "address"
        }
      ],
      "name": "setTaxationWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "taxExempt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxationWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb95c13094ad63987ab1d0acb6ef37c4d1a7f75828716d995f87ca1c2f59c83a9",
  "receipt": {
    "to": null,
    "from": "0x563c28105c246453d38f1FF25C98F32514024D9e",
    "contractAddress": "0x6FF1BFa14A57594a5874B37ff6AC5efbD9F9599A",
    "transactionIndex": 2,
    "gasUsed": "1833745",
    "logsBloom": "0x
    "blockHash": "0xef1f2f10843e1b147fb4349a5193c71175f79dd2d039e88d3af4473ecc54789a",
    "transactionHash": "0xb95c13094ad63987ab1d0acb6ef37c4d1a7f75828716d995f87ca1c2f59c83a9",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 6704559,
        "transactionHash": "0xb95c13094ad63987ab1d0acb6ef37c4d1a7f75828716d995f87ca1c2f59c83a9",
        "address": "0x6FF1BFa14A57594a5874B37ff6AC5efbD9F9599A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000563c28105c246453d38f1ff25c98f32514024d9e"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xef1f2f10843e1b147fb4349a5193c71175f79dd2d039e88d3af4473ecc54789a"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 6704559,
        "transactionHash": "0xb95c13094ad63987ab1d0acb6ef37c4d1a7f75828716d995f87ca1c2f59c83a9",
        "address": "0x6FF1BFa14A57594a5874B37ff6AC5efbD9F9599A",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006ff1bfa14a57594a5874b37ff6ac5efbd9f9599a"
        ],
        "data": "0x000000000000000000000000000000000000000000084595161401484a000000",
        "logIndex": 2,
        "blockHash": "0xef1f2f10843e1b147fb4349a5193c71175f79dd2d039e88d3af4473ecc54789a"
      }
    ],
    "blockNumber": 6704559,
    "cumulativeGasUsed": "1918298",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "faa4720f9fa8b5eca47ef6909fc04dce",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"}],\"name\":\"SetLocker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADVISORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AdvisorsAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMUNITY_DEVELOPMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CommunityDevelopmentAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LAUNCH_POOL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_POOL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LiquidityPoolAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRIVATE_SALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_SALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrivateSaleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PublicSaleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SEED_INVESTMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGIC_ROUND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SeedInvestmentAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingRewardsAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StrategicRoundAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TeamAllocationAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locker\",\"outputs\":[{\"internalType\":\"contract ILocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CommunityDevelopmentAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_StakingRewardsAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_LiquidityPoolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PublicSaleAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_AdvisorsAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_SeedInvestmentAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_PrivateSaleAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TeamAllocationAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_StrategicRoundAddr\",\"type\":\"address\"}],\"name\":\"setDistributionTeamsAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_locker\",\"type\":\"address\"}],\"name\":\"setLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setTaxExemptStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTaxationWallet\",\"type\":\"address\"}],\"name\":\"setTaxationWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"taxExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TotemToken.sol\":\"TotemToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0x8344571960f250b1c03ba9f259c452b26b04370ac4723ef262969d822174bee6\",\"license\":\"UNLICENSED\"},\"contracts/ILocker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface ILocker {\\n    /**\\n     * @dev Fails if transaction is not allowed.\\n     * Return values can be ignored for AntiBot launches\\n     */\\n    function lockOrGetPenalty(address source, address dest)\\n        external\\n        returns (bool, uint256);\\n}\\n\\ninterface ILockerUser {\\n    function locker() external view returns (ILocker);\\n\\n    /**\\n     * @dev Emitted when setLocker is called.\\n     */\\n    event SetLocker(address indexed locker);\\n}\\n\\n\",\"keccak256\":\"0x51a18df7a6b1708e8d614f547eb09dd79e64093413bb0081dbb8f0f411ce0e96\",\"license\":\"UNLICENSED\"},\"contracts/TotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"./ILocker.sol\\\";\\nimport \\\"./BasisPoints.sol\\\";\\n\\ncontract TotemToken is ILockerUser, Context, ERC20, Ownable {\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    string public constant NAME = \\\"Totem Token\\\";\\n    string public constant SYMBOL = \\\"TOTM\\\";\\n    uint8 public constant DECIMALS = 18;\\n    uint256 public constant INITIAL_SUPPLY = 10000000 * (10**uint256(DECIMALS));\\n\\n    address public CommunityDevelopmentAddr;\\n    address public StakingRewardsAddr;\\n    address public LiquidityPoolAddr;\\n    address public PublicSaleAddr;\\n    address public AdvisorsAddr;\\n    address public SeedInvestmentAddr;\\n    address public PrivateSaleAddr;\\n    address public TeamAllocationAddr;\\n    address public StrategicRoundAddr;\\n\\n    uint256 public constant COMMUNITY_DEVELOPMENT =\\n        1000000 * (10**uint256(DECIMALS)); // 10% for Community development\\n    uint256 public constant STAKING_REWARDS = 1650000 * (10**uint256(DECIMALS)); // 16.5% for Staking Revawards\\n    uint256 public constant LIQUIDITY_POOL = 600000 * (10**uint256(DECIMALS)); // 6% for Liquidity pool\\n    uint256 public constant ADVISORS = 850000 * (10**uint256(DECIMALS)); // 8.5% for Advisors\\n    uint256 public constant SEED_INVESTMENT = 450000 * (10**uint256(DECIMALS)); // 4.5% for Seed investment\\n    uint256 public constant PRIVATE_SALE = 2000000 * (10**uint256(DECIMALS)); // 20% for Private Sale\\n    uint256 public constant TEAM_ALLOCATION = 1500000 * (10**uint256(DECIMALS)); // 15% for Team allocation\\n\\n    uint256 public constant LAUNCH_POOL =\\n        5882352941 * (10**uint256(DECIMALS - 5)); // 58823.52941 for LaunchPool\\n    uint256 public constant PUBLIC_SALE =\\n        450000 * (10**uint256(DECIMALS)) + LAUNCH_POOL; // 4.5% for Public Sale\\n    uint256 public constant STRATEGIC_ROUND =\\n        1500000 * (10**uint256(DECIMALS)) - LAUNCH_POOL; // 15% for Strategic Round\\n    uint256 public taxRate = 300;\\n    address public taxationWallet;\\n\\n    bool private _isDistributionComplete = false;\\n\\n    mapping(address => bool) public taxExempt;\\n\\n    ILocker public override locker;\\n\\n    constructor() ERC20(NAME, SYMBOL) {\\n        taxationWallet = _msgSender();\\n\\n        _mint(address(this), INITIAL_SUPPLY);\\n    }\\n\\n    function setLocker(address _locker) external onlyOwner() {\\n        require(_locker != address(0), \\\"_locker cannot be address(0)\\\");\\n        locker = ILocker(_locker);\\n        emit SetLocker(_locker);\\n    }\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) public onlyOwner {\\n        require(!_isDistributionComplete);\\n\\n        require(_CommunityDevelopmentAddr != address(0));\\n        require(_StakingRewardsAddr != address(0));\\n        require(_LiquidityPoolAddr != address(0));\\n        require(_PublicSaleAddr != address(0));\\n        require(_AdvisorsAddr != address(0));\\n        require(_SeedInvestmentAddr != address(0));\\n        require(_PrivateSaleAddr != address(0));\\n        require(_TeamAllocationAddr != address(0));\\n        require(_StrategicRoundAddr != address(0));\\n        // set parnters addresses\\n        CommunityDevelopmentAddr = _CommunityDevelopmentAddr;\\n        StakingRewardsAddr = _StakingRewardsAddr;\\n        LiquidityPoolAddr = _LiquidityPoolAddr;\\n        PublicSaleAddr = _PublicSaleAddr;\\n        AdvisorsAddr = _AdvisorsAddr;\\n        SeedInvestmentAddr = _SeedInvestmentAddr;\\n        PrivateSaleAddr = _PrivateSaleAddr;\\n        TeamAllocationAddr = _TeamAllocationAddr;\\n        StrategicRoundAddr = _StrategicRoundAddr;\\n    }\\n\\n    function distributeTokens() public onlyOwner {\\n        require((!_isDistributionComplete));\\n\\n        _transfer(\\n            address(this),\\n            CommunityDevelopmentAddr,\\n            COMMUNITY_DEVELOPMENT\\n        );\\n        _transfer(address(this), StakingRewardsAddr, STAKING_REWARDS);\\n        _transfer(address(this), LiquidityPoolAddr, LIQUIDITY_POOL);\\n        _transfer(address(this), PublicSaleAddr, PUBLIC_SALE);\\n        _transfer(address(this), AdvisorsAddr, ADVISORS);\\n        _transfer(address(this), SeedInvestmentAddr, SEED_INVESTMENT);\\n        _transfer(address(this), PrivateSaleAddr, PRIVATE_SALE);\\n        _transfer(address(this), TeamAllocationAddr, TEAM_ALLOCATION);\\n        _transfer(address(this), StrategicRoundAddr, STRATEGIC_ROUND);\\n\\n        // Whitelist these addresses as tex exempt\\n        setTaxExemptStatus(CommunityDevelopmentAddr, true);\\n        setTaxExemptStatus(StakingRewardsAddr, true);\\n        setTaxExemptStatus(LiquidityPoolAddr, true);\\n        setTaxExemptStatus(PublicSaleAddr, true);\\n        setTaxExemptStatus(AdvisorsAddr, true);\\n        setTaxExemptStatus(SeedInvestmentAddr, true);\\n        setTaxExemptStatus(PrivateSaleAddr, true);\\n        setTaxExemptStatus(TeamAllocationAddr, true);\\n        setTaxExemptStatus(StrategicRoundAddr, true);\\n\\n        _isDistributionComplete = true;\\n    }\\n\\n    function setTaxRate(uint256 newTaxRate) public onlyOwner {\\n        require(newTaxRate < 10000, \\\"Tax connot be over 100% (10000 BP)\\\");\\n        taxRate = newTaxRate;\\n    }\\n\\n    function setTaxExemptStatus(address account, bool status) public onlyOwner {\\n        require(account != address(0));\\n        taxExempt[account] = status;\\n    }\\n\\n    function setTaxationWallet(address newTaxationWallet) public onlyOwner {\\n        require(newTaxationWallet != address(0));\\n        taxationWallet = newTaxationWallet;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        if (address(locker) != address(0)) {\\n            locker.lockOrGetPenalty(sender, recipient);\\n        }\\n        ERC20._transfer(sender, recipient, amount);\\n    }\\n\\n    function _transferWithTax(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(sender != recipient, \\\"Cannot self transfer\\\");\\n\\n        uint256 tax = amount.mulBP(taxRate);\\n        uint256 tokensToTransfer = amount.sub(tax);\\n\\n        _transfer(sender, taxationWallet, tax);\\n        _transfer(sender, recipient, tokensToTransfer);\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        require(_msgSender() != recipient, \\\"ERC20: cannot self transfer\\\");\\n        !taxExempt[_msgSender()]\\n            ? _transferWithTax(_msgSender(), recipient, amount)\\n            : _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        !taxExempt[sender]\\n            ? _transferWithTax(sender, recipient, amount)\\n            : _transfer(sender, recipient, amount);\\n\\n        approve(\\n            _msgSender(),\\n            allowance(sender, _msgSender()).sub(\\n                amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xfa21ba84a53a411dd96bf813d4c25a1168b631e1e5d098bb892c7e46a5e83ab0\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405261012c600f556010805460ff60a01b191690553480156200002457600080fd5b50604080518082018252600b81526a2a37ba32b6902a37b5b2b760a91b602080830191825283518085019094526004845263544f544d60e01b9084015281519192916200007491600391620002bd565b5080516200008a906004906020840190620002bd565b50506005805460ff19166012179055506000620000a662000143565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200010662000143565b601080546001600160a01b0319166001600160a01b03929092169190911790556200013d306a084595161401484a00000062000147565b62000369565b3390565b6001600160a01b038216620001a3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001b16000838362000256565b620001cd816002546200025b60201b620015281790919060201c565b6002556001600160a01b0382166000908152602081815260409091205462000200918390620015286200025b821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620002b6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620002f5576000855562000340565b82601f106200031057805160ff191683800117855562000340565b8280016001018555821562000340579182015b828111156200034057825182559160200191906001019062000323565b506200034e92915062000352565b5090565b5b808211156200034e576000815560010162000353565b611d3480620003796000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c8063715018a611610167578063a8d61e9c116100ce578063d7b96d4e11610087578063d7b96d4e14610684578063dd62ed3e1461068c578063e04d2a71146106ba578063f2fde38b146106c2578063f76f8d78146106e8578063fd99cbed146106f057610295565b8063a8d61e9c14610575578063a9059cbb146105df578063b3b37fe11461060b578063c125c86114610613578063c6d69a3014610641578063d1ecfc681461065e57610295565b806398c83a161161012057806398c83a161461052157806398f70100146105295780639ab1b484146105315780639d51606d14610539578063a3f4df7e14610541578063a457c2d71461054957610295565b8063715018a6146104f1578063771a3a1d146104f9578063842460a5146105015780638da5cb5b1461050957806393b23dce1461051157806395d89b411461051957610295565b8063294707661161020b57806339509351116101c4578063395093511461047f57806345f38dbb146104ab5780634a5db0a9146104b35780634ed87713146104bb5780635f89584e146104c357806370a08231146104cb57610295565b806329470766146104395780632cca9dfd146104415780632e0f2625146104495780632ff2e9dc14610467578063313ce5671461046f578063337e4ece1461047757610295565b8063124a0b1c1161025d578063124a0b1c1461039d578063171060ec146103a557806318160ddd146103cd5780631f48847b146103d557806323b872dd146103dd57806328e2f9971461041357610295565b806302f73b2b1461029a57806306f2d223146102b457806306fdde03146102d857806307bce0cd14610355578063095ea7b31461035d575b600080fd5b6102a26106f8565b60408051918252519081900360200190f35b6102bc610706565b604080516001600160a01b039092168252519081900360200190f35b6102e0610715565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031a578181015183820152602001610302565b50505050905090810190601f1680156103475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a26107ab565b6103896004803603604081101561037357600080fd5b506001600160a01b0381351690602001356107ba565b604080519115158252519081900360200190f35b6102bc6107d8565b6103cb600480360360208110156103bb57600080fd5b50356001600160a01b03166107e7565b005b6102a26108ee565b6102bc6108f4565b610389600480360360608110156103f357600080fd5b506001600160a01b03813581169160208101359091169060400135610903565b6103cb6004803603602081101561042957600080fd5b50356001600160a01b031661098f565b6102bc610a26565b6102a2610a35565b610451610a43565b6040805160ff9092168252519081900360200190f35b6102a2610a48565b610451610a57565b6102bc610a60565b6103896004803603604081101561049557600080fd5b506001600160a01b038135169060200135610a6f565b6102a2610ac2565b6102bc610ad0565b6102a2610adf565b6102a2610aed565b6102a2600480360360208110156104e157600080fd5b50356001600160a01b0316610afb565b6103cb610b16565b6102a2610bc8565b6102a2610bce565b6102bc610bdd565b6102bc610bf1565b6102e0610c00565b6102a2610c61565b6102bc610c70565b6103cb610c7f565b6102bc610f12565b6102e0610f21565b6103896004803603604081101561055f57600080fd5b506001600160a01b038135169060200135610f48565b6103cb600480360361012081101561058c57600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135821691608082013581169160a081013582169160c082013581169160e08101358216916101009091013516610fb0565b610389600480360360408110156105f557600080fd5b506001600160a01b038135169060200135611171565b6102bc611238565b6103cb6004803603604081101561062957600080fd5b506001600160a01b0381351690602001351515611247565b6103cb6004803603602081101561065757600080fd5b50356112e7565b6103896004803603602081101561067457600080fd5b50356001600160a01b031661138e565b6102bc6113a3565b6102a2600480360360408110156106a257600080fd5b506001600160a01b03813581169160200135166113b2565b6102a26113dd565b6103cb600480360360208110156106d857600080fd5b50356001600160a01b03166113eb565b6102e06114f9565b6102a2611519565b69d3c21bcecceda100000081565b6007546001600160a01b031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b820191906000526020600020905b81548152906001019060200180831161078457829003601f168201915b5050505050905090565b6a015d66ade20554e340000081565b60006107ce6107c7611589565b848461158d565b5060015b92915050565b6008546001600160a01b031681565b6107ef611589565b6001600160a01b0316610800610bdd565b6001600160a01b031614610849576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0381166108a4576040805162461bcd60e51b815260206004820152601c60248201527f5f6c6f636b65722063616e6e6f74206265206164647265737328302900000000604482015290519081900360640190fd5b601280546001600160a01b0319166001600160a01b0383169081179091556040517f2ad3bcdfc9b535ec0e163460ef3e0b8015fca3aa8e9cc778ca27876a07bd282790600090a250565b60025490565b600e546001600160a01b031681565b6001600160a01b03831660009081526011602052604081205460ff16156109345761092f848484611679565b61093f565b61093f84848461171a565b61098461094a611589565b61097f84604051806060016040528060218152602001611be76021913961097889610973611589565b6113b2565b9190611854565b6107ba565b506001949350505050565b610997611589565b6001600160a01b03166109a8610bdd565b6001600160a01b0316146109f1576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b038116610a0457600080fd5b601080546001600160a01b0319166001600160a01b0392909216919091179055565b600d546001600160a01b031681565b697f0e10af47c1c700000081565b601281565b6a084595161401484a00000081565b60055460ff1690565b6006546001600160a01b031681565b60006107ce610a7c611589565b84610abd8560016000610a8d611589565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611528565b61158d565b695f4a8c8375d15540000081565b6010546001600160a01b031681565b69b3fe97a2fafd2f40000081565b696bbf60f907cbf686200081565b6001600160a01b031660009081526020819052604090205490565b610b1e611589565b6001600160a01b0316610b2f610bdd565b6001600160a01b031614610b78576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600f5481565b6a01312e5540a169d039e00081565b60055461010090046001600160a01b031690565b6009546001600160a01b031681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b6a01a784379d99db4200000081565b600c546001600160a01b031681565b610c87611589565b6001600160a01b0316610c98610bdd565b6001600160a01b031614610ce1576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b601054600160a01b900460ff1615610cf857600080fd5b600654610d1a9030906001600160a01b031669d3c21bcecceda1000000611679565b600754610d3d9030906001600160a01b03166a015d66ade20554e3400000611679565b600854610d5f9030906001600160a01b0316697f0e10af47c1c7000000611679565b600954610d819030906001600160a01b0316696bbf60f907cbf6862000611679565b600a54610da39030906001600160a01b031669b3fe97a2fafd2f400000611679565b600b54610dc59030906001600160a01b0316695f4a8c8375d155400000611679565b600c54610de89030906001600160a01b03166a01a784379d99db42000000611679565b600d54610e0b9030906001600160a01b03166a013da329b6336471800000611679565b600e54610e2e9030906001600160a01b03166a01312e5540a169d039e000611679565b600654610e45906001600160a01b03166001611247565b600754610e5c906001600160a01b03166001611247565b600854610e73906001600160a01b03166001611247565b600954610e8a906001600160a01b03166001611247565b600a54610ea1906001600160a01b03166001611247565b600b54610eb8906001600160a01b03166001611247565b600c54610ecf906001600160a01b03166001611247565b600d54610ee6906001600160a01b03166001611247565b600e54610efd906001600160a01b03166001611247565b6010805460ff60a01b1916600160a01b179055565b600b546001600160a01b031681565b6040518060400160405280600b81526020016a2a37ba32b6902a37b5b2b760a91b81525081565b60006107ce610f55611589565b84610abd85604051806060016040528060258152602001611cda6025913960016000610f7f611589565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611854565b610fb8611589565b6001600160a01b0316610fc9610bdd565b6001600160a01b031614611012576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b601054600160a01b900460ff161561102957600080fd5b6001600160a01b03891661103c57600080fd5b6001600160a01b03881661104f57600080fd5b6001600160a01b03871661106257600080fd5b6001600160a01b03861661107557600080fd5b6001600160a01b03851661108857600080fd5b6001600160a01b03841661109b57600080fd5b6001600160a01b0383166110ae57600080fd5b6001600160a01b0382166110c157600080fd5b6001600160a01b0381166110d457600080fd5b600680546001600160a01b03199081166001600160a01b039b8c1617909155600780548216998b1699909917909855600880548916978a169790971790965560098054881695891695909517909455600a8054871693881693909317909255600b80548616918716919091179055600c80548516918616919091179055600d80548416918516919091179055600e80549092169216919091179055565b6000826001600160a01b0316611185611589565b6001600160a01b031614156111e1576040805162461bcd60e51b815260206004820152601b60248201527f45524332303a2063616e6e6f742073656c66207472616e736665720000000000604482015290519081900360640190fd5b601160006111ed611589565b6001600160a01b0316815260208101919091526040016000205460ff16156112265761122161121a611589565b8484611679565b6107ce565b6107ce611231611589565b848461171a565b600a546001600160a01b031681565b61124f611589565b6001600160a01b0316611260610bdd565b6001600160a01b0316146112a9576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0382166112bc57600080fd5b6001600160a01b03919091166000908152601160205260409020805460ff1916911515919091179055565b6112ef611589565b6001600160a01b0316611300610bdd565b6001600160a01b031614611349576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b61271081106113895760405162461bcd60e51b8152600401808060200182810382526022815260200180611c2e6022913960400191505060405180910390fd5b600f55565b60116020526000908152604090205460ff1681565b6012546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b690c74d47591faa146200081565b6113f3611589565b6001600160a01b0316611404610bdd565b6001600160a01b03161461144d576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0381166114925760405162461bcd60e51b8152600401808060200182810382526026815260200180611b9f6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60405180604001604052806004815260200163544f544d60e01b81525081565b6a013da329b633647180000081565b600082820183811015611582576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166115d25760405162461bcd60e51b8152600401808060200182810382526024815260200180611cb66024913960400191505060405180910390fd5b6001600160a01b0382166116175760405162461bcd60e51b8152600401808060200182810382526022815260200180611bc56022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6012546001600160a01b03161561170a576012546040805163aa61a9dd60e01b81526001600160a01b0386811660048301528581166024830152825193169263aa61a9dd926044808401939192918290030181600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050506040513d604081101561170757600080fd5b50505b6117158383836118eb565b505050565b6001600160a01b03831661175f5760405162461bcd60e51b8152600401808060200182810382526025815260200180611c916025913960400191505060405180910390fd5b6001600160a01b0382166117a45760405162461bcd60e51b8152600401808060200182810382526023815260200180611b7c6023913960400191505060405180910390fd5b816001600160a01b0316836001600160a01b03161415611802576040805162461bcd60e51b815260206004820152601460248201527321b0b73737ba1039b2b633103a3930b739b332b960611b604482015290519081900360640190fd5b6000611819600f5483611a4690919063ffffffff16565b905060006118278383611a5e565b6010549091506118429086906001600160a01b031684611679565b61184d858583611679565b5050505050565b600081848411156118e35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a8578181015183820152602001611890565b50505050905090810190601f1680156118d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166119305760405162461bcd60e51b8152600401808060200182810382526025815260200180611c916025913960400191505060405180910390fd5b6001600160a01b0382166119755760405162461bcd60e51b8152600401808060200182810382526023815260200180611b7c6023913960400191505060405180910390fd5b611980838383611715565b6119bd81604051806060016040528060268152602001611c08602691396001600160a01b0386166000908152602081905260409020549190611854565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119ec9082611528565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000611582612710611a588585611abb565b90611b14565b600082821115611ab5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611aca575060006107d2565b82820282848281611ad757fe5b04146115825760405162461bcd60e51b8152600401808060200182810382526021815260200180611c506021913960400191505060405180910390fd5b6000808211611b6a576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611b7357fe5b04939250505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636554617820636f6e6e6f74206265206f76657220313030252028313030303020425029536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122012671cdbbde11c26e2ba48b199fcb50809afbb1ac3c383735b46e0967f0040d564736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c8063715018a611610167578063a8d61e9c116100ce578063d7b96d4e11610087578063d7b96d4e14610684578063dd62ed3e1461068c578063e04d2a71146106ba578063f2fde38b146106c2578063f76f8d78146106e8578063fd99cbed146106f057610295565b8063a8d61e9c14610575578063a9059cbb146105df578063b3b37fe11461060b578063c125c86114610613578063c6d69a3014610641578063d1ecfc681461065e57610295565b806398c83a161161012057806398c83a161461052157806398f70100146105295780639ab1b484146105315780639d51606d14610539578063a3f4df7e14610541578063a457c2d71461054957610295565b8063715018a6146104f1578063771a3a1d146104f9578063842460a5146105015780638da5cb5b1461050957806393b23dce1461051157806395d89b411461051957610295565b8063294707661161020b57806339509351116101c4578063395093511461047f57806345f38dbb146104ab5780634a5db0a9146104b35780634ed87713146104bb5780635f89584e146104c357806370a08231146104cb57610295565b806329470766146104395780632cca9dfd146104415780632e0f2625146104495780632ff2e9dc14610467578063313ce5671461046f578063337e4ece1461047757610295565b8063124a0b1c1161025d578063124a0b1c1461039d578063171060ec146103a557806318160ddd146103cd5780631f48847b146103d557806323b872dd146103dd57806328e2f9971461041357610295565b806302f73b2b1461029a57806306f2d223146102b457806306fdde03146102d857806307bce0cd14610355578063095ea7b31461035d575b600080fd5b6102a26106f8565b60408051918252519081900360200190f35b6102bc610706565b604080516001600160a01b039092168252519081900360200190f35b6102e0610715565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031a578181015183820152602001610302565b50505050905090810190601f1680156103475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a26107ab565b6103896004803603604081101561037357600080fd5b506001600160a01b0381351690602001356107ba565b604080519115158252519081900360200190f35b6102bc6107d8565b6103cb600480360360208110156103bb57600080fd5b50356001600160a01b03166107e7565b005b6102a26108ee565b6102bc6108f4565b610389600480360360608110156103f357600080fd5b506001600160a01b03813581169160208101359091169060400135610903565b6103cb6004803603602081101561042957600080fd5b50356001600160a01b031661098f565b6102bc610a26565b6102a2610a35565b610451610a43565b6040805160ff9092168252519081900360200190f35b6102a2610a48565b610451610a57565b6102bc610a60565b6103896004803603604081101561049557600080fd5b506001600160a01b038135169060200135610a6f565b6102a2610ac2565b6102bc610ad0565b6102a2610adf565b6102a2610aed565b6102a2600480360360208110156104e157600080fd5b50356001600160a01b0316610afb565b6103cb610b16565b6102a2610bc8565b6102a2610bce565b6102bc610bdd565b6102bc610bf1565b6102e0610c00565b6102a2610c61565b6102bc610c70565b6103cb610c7f565b6102bc610f12565b6102e0610f21565b6103896004803603604081101561055f57600080fd5b506001600160a01b038135169060200135610f48565b6103cb600480360361012081101561058c57600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135821691608082013581169160a081013582169160c082013581169160e08101358216916101009091013516610fb0565b610389600480360360408110156105f557600080fd5b506001600160a01b038135169060200135611171565b6102bc611238565b6103cb6004803603604081101561062957600080fd5b506001600160a01b0381351690602001351515611247565b6103cb6004803603602081101561065757600080fd5b50356112e7565b6103896004803603602081101561067457600080fd5b50356001600160a01b031661138e565b6102bc6113a3565b6102a2600480360360408110156106a257600080fd5b506001600160a01b03813581169160200135166113b2565b6102a26113dd565b6103cb600480360360208110156106d857600080fd5b50356001600160a01b03166113eb565b6102e06114f9565b6102a2611519565b69d3c21bcecceda100000081565b6007546001600160a01b031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b820191906000526020600020905b81548152906001019060200180831161078457829003601f168201915b5050505050905090565b6a015d66ade20554e340000081565b60006107ce6107c7611589565b848461158d565b5060015b92915050565b6008546001600160a01b031681565b6107ef611589565b6001600160a01b0316610800610bdd565b6001600160a01b031614610849576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0381166108a4576040805162461bcd60e51b815260206004820152601c60248201527f5f6c6f636b65722063616e6e6f74206265206164647265737328302900000000604482015290519081900360640190fd5b601280546001600160a01b0319166001600160a01b0383169081179091556040517f2ad3bcdfc9b535ec0e163460ef3e0b8015fca3aa8e9cc778ca27876a07bd282790600090a250565b60025490565b600e546001600160a01b031681565b6001600160a01b03831660009081526011602052604081205460ff16156109345761092f848484611679565b61093f565b61093f84848461171a565b61098461094a611589565b61097f84604051806060016040528060218152602001611be76021913961097889610973611589565b6113b2565b9190611854565b6107ba565b506001949350505050565b610997611589565b6001600160a01b03166109a8610bdd565b6001600160a01b0316146109f1576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b038116610a0457600080fd5b601080546001600160a01b0319166001600160a01b0392909216919091179055565b600d546001600160a01b031681565b697f0e10af47c1c700000081565b601281565b6a084595161401484a00000081565b60055460ff1690565b6006546001600160a01b031681565b60006107ce610a7c611589565b84610abd8560016000610a8d611589565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611528565b61158d565b695f4a8c8375d15540000081565b6010546001600160a01b031681565b69b3fe97a2fafd2f40000081565b696bbf60f907cbf686200081565b6001600160a01b031660009081526020819052604090205490565b610b1e611589565b6001600160a01b0316610b2f610bdd565b6001600160a01b031614610b78576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600f5481565b6a01312e5540a169d039e00081565b60055461010090046001600160a01b031690565b6009546001600160a01b031681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b6a01a784379d99db4200000081565b600c546001600160a01b031681565b610c87611589565b6001600160a01b0316610c98610bdd565b6001600160a01b031614610ce1576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b601054600160a01b900460ff1615610cf857600080fd5b600654610d1a9030906001600160a01b031669d3c21bcecceda1000000611679565b600754610d3d9030906001600160a01b03166a015d66ade20554e3400000611679565b600854610d5f9030906001600160a01b0316697f0e10af47c1c7000000611679565b600954610d819030906001600160a01b0316696bbf60f907cbf6862000611679565b600a54610da39030906001600160a01b031669b3fe97a2fafd2f400000611679565b600b54610dc59030906001600160a01b0316695f4a8c8375d155400000611679565b600c54610de89030906001600160a01b03166a01a784379d99db42000000611679565b600d54610e0b9030906001600160a01b03166a013da329b6336471800000611679565b600e54610e2e9030906001600160a01b03166a01312e5540a169d039e000611679565b600654610e45906001600160a01b03166001611247565b600754610e5c906001600160a01b03166001611247565b600854610e73906001600160a01b03166001611247565b600954610e8a906001600160a01b03166001611247565b600a54610ea1906001600160a01b03166001611247565b600b54610eb8906001600160a01b03166001611247565b600c54610ecf906001600160a01b03166001611247565b600d54610ee6906001600160a01b03166001611247565b600e54610efd906001600160a01b03166001611247565b6010805460ff60a01b1916600160a01b179055565b600b546001600160a01b031681565b6040518060400160405280600b81526020016a2a37ba32b6902a37b5b2b760a91b81525081565b60006107ce610f55611589565b84610abd85604051806060016040528060258152602001611cda6025913960016000610f7f611589565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611854565b610fb8611589565b6001600160a01b0316610fc9610bdd565b6001600160a01b031614611012576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b601054600160a01b900460ff161561102957600080fd5b6001600160a01b03891661103c57600080fd5b6001600160a01b03881661104f57600080fd5b6001600160a01b03871661106257600080fd5b6001600160a01b03861661107557600080fd5b6001600160a01b03851661108857600080fd5b6001600160a01b03841661109b57600080fd5b6001600160a01b0383166110ae57600080fd5b6001600160a01b0382166110c157600080fd5b6001600160a01b0381166110d457600080fd5b600680546001600160a01b03199081166001600160a01b039b8c1617909155600780548216998b1699909917909855600880548916978a169790971790965560098054881695891695909517909455600a8054871693881693909317909255600b80548616918716919091179055600c80548516918616919091179055600d80548416918516919091179055600e80549092169216919091179055565b6000826001600160a01b0316611185611589565b6001600160a01b031614156111e1576040805162461bcd60e51b815260206004820152601b60248201527f45524332303a2063616e6e6f742073656c66207472616e736665720000000000604482015290519081900360640190fd5b601160006111ed611589565b6001600160a01b0316815260208101919091526040016000205460ff16156112265761122161121a611589565b8484611679565b6107ce565b6107ce611231611589565b848461171a565b600a546001600160a01b031681565b61124f611589565b6001600160a01b0316611260610bdd565b6001600160a01b0316146112a9576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0382166112bc57600080fd5b6001600160a01b03919091166000908152601160205260409020805460ff1916911515919091179055565b6112ef611589565b6001600160a01b0316611300610bdd565b6001600160a01b031614611349576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b61271081106113895760405162461bcd60e51b8152600401808060200182810382526022815260200180611c2e6022913960400191505060405180910390fd5b600f55565b60116020526000908152604090205460ff1681565b6012546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b690c74d47591faa146200081565b6113f3611589565b6001600160a01b0316611404610bdd565b6001600160a01b03161461144d576040805162461bcd60e51b81526020600482018190526024820152600080516020611c71833981519152604482015290519081900360640190fd5b6001600160a01b0381166114925760405162461bcd60e51b8152600401808060200182810382526026815260200180611b9f6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60405180604001604052806004815260200163544f544d60e01b81525081565b6a013da329b633647180000081565b600082820183811015611582576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166115d25760405162461bcd60e51b8152600401808060200182810382526024815260200180611cb66024913960400191505060405180910390fd5b6001600160a01b0382166116175760405162461bcd60e51b8152600401808060200182810382526022815260200180611bc56022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6012546001600160a01b03161561170a576012546040805163aa61a9dd60e01b81526001600160a01b0386811660048301528581166024830152825193169263aa61a9dd926044808401939192918290030181600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050506040513d604081101561170757600080fd5b50505b6117158383836118eb565b505050565b6001600160a01b03831661175f5760405162461bcd60e51b8152600401808060200182810382526025815260200180611c916025913960400191505060405180910390fd5b6001600160a01b0382166117a45760405162461bcd60e51b8152600401808060200182810382526023815260200180611b7c6023913960400191505060405180910390fd5b816001600160a01b0316836001600160a01b03161415611802576040805162461bcd60e51b815260206004820152601460248201527321b0b73737ba1039b2b633103a3930b739b332b960611b604482015290519081900360640190fd5b6000611819600f5483611a4690919063ffffffff16565b905060006118278383611a5e565b6010549091506118429086906001600160a01b031684611679565b61184d858583611679565b5050505050565b600081848411156118e35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a8578181015183820152602001611890565b50505050905090810190601f1680156118d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166119305760405162461bcd60e51b8152600401808060200182810382526025815260200180611c916025913960400191505060405180910390fd5b6001600160a01b0382166119755760405162461bcd60e51b8152600401808060200182810382526023815260200180611b7c6023913960400191505060405180910390fd5b611980838383611715565b6119bd81604051806060016040528060268152602001611c08602691396001600160a01b0386166000908152602081905260409020549190611854565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119ec9082611528565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000611582612710611a588585611abb565b90611b14565b600082821115611ab5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611aca575060006107d2565b82820282848281611ad757fe5b04146115825760405162461bcd60e51b8152600401808060200182810382526021815260200180611c506021913960400191505060405180910390fd5b6000808211611b6a576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611b7357fe5b04939250505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636554617820636f6e6e6f74206265206f76657220313030252028313030303020425029536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122012671cdbbde11c26e2ba48b199fcb50809afbb1ac3c383735b46e0967f0040d564736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 527,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 533,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 535,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 537,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 539,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 541,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 53,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3227,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "CommunityDevelopmentAddr",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 3229,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "StakingRewardsAddr",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 3231,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "LiquidityPoolAddr",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 3233,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "PublicSaleAddr",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 3235,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "AdvisorsAddr",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 3237,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "SeedInvestmentAddr",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 3239,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "PrivateSaleAddr",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 3241,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "TeamAllocationAddr",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 3243,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "StrategicRoundAddr",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 3362,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "taxRate",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 3364,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "taxationWallet",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 3367,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "_isDistributionComplete",
        "offset": 20,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 3371,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "taxExempt",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3374,
        "contract": "contracts/TotemToken.sol:TotemToken",
        "label": "locker",
        "offset": 0,
        "slot": "18",
        "type": "t_contract(ILocker)1242"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ILocker)1242": {
        "encoding": "inplace",
        "label": "contract ILocker",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}